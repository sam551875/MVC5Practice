@model MVC5Practice.Models.Home.MT103Format

@{
    ViewBag.Title = "MT103資料提交頁面";
}

<script>
    // 欄位驗證 - 不得空值
    function comfirmCheck() {

        var SendersReference = $('#SendersReference').val();
        var TimeIndication = $('#TimeIndication').val();
        var BankOprationCode = $('#BankOprationCode').val();
        var InstructionCode = $('#InstructionCode').val();
        var TransactionTypeCode = $('#TransactionTypeCode').val();
        var ValueDate_CurrencyCode_Amount = $('#ValueDate_CurrencyCode_Amount').val();
        var Currency_InstructedAmount = $('#Currency_InstructedAmount').val();
        var ExchangeRate = $('#ExchangeRate').val();
        var OrderingCustomer = $('#OrderingCustomer').val();
        var SendingInstitution = $('#SendingInstitution').val();
        var OrderingInstitution = $('#OrderingInstitution').val();
        var SendersCorrespondent = $('#SendersCorrespondent').val();
        var ReceiversCorrespondent = $('#ReceiversCorrespondent').val();
        var ThirdReimbursementInstitution = $('#ThirdReimbursementInstitution').val();
        var IntermediaryInstitution = $('#IntermediaryInstitution').val();
        var AccountWithInstitution = $('#AccountWithInstitution').val();
        var BeneficiaryCustomer = $('#BeneficiaryCustomer').val();
        var RemittanceInformation = $('#RemittanceInformation').val();
        var DetailsofCharges = $('#DetailsofCharges').val();
        var SendersCharges = $('#SendersCharges').val();
        var ReceiversCharges = $('#ReceiversCharges').val();
        var SendertoReceiverInformation = $('#SendertoReceiverInformation').val();
        var RegulatoryReporting = $('#RegulatoryReporting').val();
        var formatConfirm = "";

        //檢查空值
        if (SendersReference == "") {
            alert("發訊行號碼 is empty!");
            return false;
        }
        if (TimeIndication == "") {
            alert("時間指示 is empty!");
            return false;
        }
        if (BankOprationCode == "") {
            alert("銀行作業代號 is empty!");
            return false;
        }
        if (InstructionCode == "") {
            alert("指示代號 is empty!");
            return false;
        }
        if (TransactionTypeCode == "") {
            alert("交易型態代號 is empty!");
            return false;
        }
        if (ValueDate_CurrencyCode_Amount == "") {
            alert("生效日、幣別碼、金額、銀行間清算金額 is empty!");
            return false;
        }
        if (Currency_InstructedAmount == "") {
            alert("幣別代碼、指示之金額 is empty!");
            return false;
        }
        if (ExchangeRate == "") {
            alert("匯率 is empty!");
            return false;
        }
        if (OrderingCustomer == "") {
            alert("匯款申請人 is empty!");
            return false;
        }
        if (SendingInstitution == "") {
            alert("發訊銀行機構 is empty!");
            return false;
        }
        if (OrderingInstitution == "") {
            alert("匯款申請機構 is empty!");
            return false;
        }
        if (SendersCorrespondent == "") {
            alert("發訊行之通匯行 is empty!");
            return false;
        }
        if (ReceiversCorrespondent == "") {
            alert("收訊行之通匯行 is empty!");
            return false;
        }
        if (ThirdReimbursementInstitution == "") {
            alert("第三補償機構 is empty!");
            return false;
        }
        if (IntermediaryInstitution == "") {
            alert("中間銀行 is empty!");
            return false;
        }
        if (AccountWithInstitution == "") {
            alert("設帳銀行 is empty!");
            return false;
        }
        if (BeneficiaryCustomer == "") {
            alert("受益顧客 is empty!");
            return false;
        }
        if (RemittanceInformation == "") {
            alert("付款明細 is empty!");
            return false;
        }
        if (DetailsofCharges == "") {
            alert("收費明細(對象) is empty!");
            return false;
        }
        if (SendersCharges == "") {
            alert("發訊行之費用 is empty!");
            return false;
        }
        if (ReceiversCharges == "") {
            alert("收訊行之費用 is empty!");
            return false;
        }
        if (SendertoReceiverInformation == "") {
            alert("發訊行予收訊行之訊息 is empty!");
            return false;
        }
        if (RegulatoryReporting == "") {
            alert("申報之規定 is empty!");
            return false;
        }

        //檢查欄位格式
        if (SendersReference != "") {
            formatConfirm = "1";

            if (SendersReference.length > 16)
            {
                formatConfirm = "0";
            }

            if (formatConfirm == "0") {
                alert("發訊行號碼 格式錯誤!");
                return false;
            }
            
        }
        if (TimeIndication != "") {
            formatConfirm = "1";

            const index1 = TimeIndication.indexOf("/");
            const index2 = TimeIndication.indexOf("/", (index1 + 1));

            var code = TimeIndication.substring(index1 + 1, index2);
            var time1 = TimeIndication.substring(index2 + 1, index2 + 5);
            var time2 = TimeIndication.substring(index2 + 6, index2 + 10);
            var sign = TimeIndication.substring(index2 + 5, index2 + 6);

            if (TimeIndication.length != 18) {
                formatConfirm = "0";
            }

            if (["CLSTIME", "RNCTIME", "SNDTIME"].indexOf(code) < 0) {
                formatConfirm = "0";
            }

            if (checkNumber(time1) != true) {
                formatConfirm = "0";
            }

            if (checkNumber(time2) != true) {
                formatConfirm = "0";
            }

            if (["+", "-"].indexOf(sign) < 0) {
                formatConfirm = "0";
            }

            if (formatConfirm == "0") {
                alert("時間指示 格式錯誤!");
                return false;
            }
            
        }
        if (BankOprationCode == "") {
            alert("銀行作業代號 is empty!");
            return false;
        }
        if (InstructionCode == "") {
            alert("指示代號 is empty!");
            return false;
        }
        if (TransactionTypeCode == "") {
            alert("交易型態代號 is empty!");
            return false;
        }
        if (ValueDate_CurrencyCode_Amount == "") {
            alert("生效日、幣別碼、金額、銀行間清算金額 is empty!");
            return false;
        }
        if (Currency_InstructedAmount == "") {
            alert("幣別代碼、指示之金額 is empty!");
            return false;
        }
        if (ExchangeRate == "") {
            alert("匯率 is empty!");
            return false;
        }
        if (OrderingCustomer == "") {
            alert("匯款申請人 is empty!");
            return false;
        }
        if (SendingInstitution == "") {
            alert("發訊銀行機構 is empty!");
            return false;
        }
        if (OrderingInstitution == "") {
            alert("匯款申請機構 is empty!");
            return false;
        }
        if (SendersCorrespondent == "") {
            alert("發訊行之通匯行 is empty!");
            return false;
        }
        if (ReceiversCorrespondent == "") {
            alert("收訊行之通匯行 is empty!");
            return false;
        }
        if (ThirdReimbursementInstitution == "") {
            alert("第三補償機構 is empty!");
            return false;
        }
        if (IntermediaryInstitution == "") {
            alert("中間銀行 is empty!");
            return false;
        }
        if (AccountWithInstitution == "") {
            alert("設帳銀行 is empty!");
            return false;
        }
        if (BeneficiaryCustomer == "") {
            alert("受益顧客 is empty!");
            return false;
        }
        if (RemittanceInformation == "") {
            alert("付款明細 is empty!");
            return false;
        }
        if (DetailsofCharges == "") {
            alert("收費明細(對象) is empty!");
            return false;
        }
        if (SendersCharges == "") {
            alert("發訊行之費用 is empty!");
            return false;
        }
        if (ReceiversCharges == "") {
            alert("收訊行之費用 is empty!");
            return false;
        }
        if (SendertoReceiverInformation == "") {
            alert("發訊行予收訊行之訊息 is empty!");
            return false;
        }
        if (RegulatoryReporting == "") {
            alert("申報之規定 is empty!");
            return false;
        }

        alert("資料提交成功!");
        TxnPage1.submit();
    }
    // // 驗證 - 限輸英數字
    function ValidateCNWord(e, value) {
        if (/[\W]/g.test(value)) {
            value = value.replace(/[\W]/g, '')
            $(e).val(value);
        }
        return false;
    }
    //判斷字串是否為數字
    function checkNumber(str)
    {
        var re = /\d/; 
        if (!re.test(str)) {
            return false;
        }
        return true;
    }
</script>
@*<script src="~/Scripts/FieldValidate.js"></script>*@

<h2>TxnPage1</h2>


@using (Html.BeginForm("TxnPage1", "Home", FormMethod.Post, new { @class = "form-signin", @id = "TxnPage1" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>MT103資料提交頁面</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.SendersReference, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">發訊行號碼</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SendersReference, new {@class = "form-control", @id = "SendersReference",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.TimeIndication, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">時間指示</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.TimeIndication, new { @class = "form-control", @id = "TimeIndication",
               //@onkeyup = "return ValidateCNWord($(this),value);",
               //@onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.BankOprationCode, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">銀行作業代號</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.BankOprationCode, new { @class = "form-control", @id = "BankOprationCode",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.InstructionCode, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">指示代號</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.InstructionCode, new { @class = "form-control", @id = "InstructionCode",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.TransactionTypeCode, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">交易型態代號</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.TransactionTypeCode, new { @class = "form-control", @id = "TransactionTypeCode",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ValueDate_CurrencyCode_Amount, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">生效日、幣別碼、金額、銀行間清算金額</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ValueDate_CurrencyCode_Amount, new { @class = "form-control", @id = "ValueDate_CurrencyCode_Amount",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           } )
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Currency_InstructedAmount, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">幣別代碼、指示之金額</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Currency_InstructedAmount, new { @class = "form-control", @id = "Currency_InstructedAmount",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ExchangeRate, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">匯率</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ExchangeRate, new { @class = "form-control", @id = "ExchangeRate",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.OrderingCustomer, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">匯款申請人</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.OrderingCustomer, new { @class = "form-control", @id = "OrderingCustomer",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.SendingInstitution, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">發訊銀行機構</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SendingInstitution, new { @class = "form-control", @id = "SendingInstitution",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.OrderingInstitution, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">匯款申請機構</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.OrderingInstitution, new { @class = "form-control", @id = "OrderingInstitution",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.SendersCorrespondent, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">發訊行之通匯行</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SendersCorrespondent, new { @class = "form-control", @id = "SendersCorrespondent",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ReceiversCorrespondent, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">收訊行之通匯行</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ReceiversCorrespondent, new { @class = "form-control", @id = "ReceiversCorrespondent",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ThirdReimbursementInstitution, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">第三補償機構</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ThirdReimbursementInstitution, new { @class = "form-control", @id = "ThirdReimbursementInstitution",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.IntermediaryInstitution, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">中間銀行</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.IntermediaryInstitution, new
                {
                    @class = "form-control",
                    @id = "IntermediaryInstitution",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.AccountWithInstitution, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">設帳銀行</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.AccountWithInstitution, new
                {
                    @class = "form-control",
                    @id = "AccountWithInstitution",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.BeneficiaryCustomer, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">受益顧客</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.BeneficiaryCustomer, new
                {
                    @class = "form-control",
                    @id = "BeneficiaryCustomer",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.RemittanceInformation, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">付款明細</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.RemittanceInformation, new
                {
                    @class = "form-control",
                    @id = "RemittanceInformation",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.DetailsofCharges, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">收費明細(對象)</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DetailsofCharges, new
                {
                    @class = "form-control",
                    @id = "DetailsofCharges",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.SendersCharges, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">發訊行之費用</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SendersCharges, new
                {
                    @class = "form-control",
                    @id = "SendersCharges",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ReceiversCharges, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">收訊行之費用</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ReceiversCharges, new
                {
                    @class = "form-control",
                    @id = "ReceiversCharges",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.SendertoReceiverInformation, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">發訊行予收訊行之訊息</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SendertoReceiverInformation, new
                {
                    @class = "form-control",
                    @id = "SendertoReceiverInformation",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.RegulatoryReporting, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">申報之規定</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.RegulatoryReporting, new
                {
                    @class = "form-control",
                    @id = "RegulatoryReporting",
               @onkeyup = "return ValidateCNWord($(this),value);",
               @onblur = "return ValidateCNWord($(this),value);"
           })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" onclick="comfirmCheck()" class="btn btn-default">資料提交</button>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
